{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Egzon/Desktop/Gaming-NextJS/lib/auth.ts"],"sourcesContent":["    import bcrypt from 'bcryptjs';\r\n    import jwt from 'jsonwebtoken';\r\n\r\n    export async function hashPassword(password: string): Promise<string> {\r\n    try {\r\n        const saltRounds = 10;\r\n        const hashedPassword = await bcrypt.hash(password, saltRounds);\r\n        return hashedPassword;\r\n    } catch (error) {\r\n        console.error('Error hashing password:', error);\r\n        throw new Error('Failed to hash password');\r\n    }\r\n    }\r\n\r\n    export async function comparePassword(password: string, hashedPassword: string): Promise<boolean> {\r\n    try {\r\n        const isMatch = await bcrypt.compare(password, hashedPassword);\r\n        return isMatch;\r\n    } catch (error) {\r\n        console.error('Error comparing password:', error);\r\n        throw new Error('Failed to compare password');\r\n    }\r\n    }\r\n\r\n    export function generateToken(payload: object): string {\r\n    try {\r\n        const secret = process.env.JWT_SECRET;\r\n        \r\n        if (!secret) {\r\n        throw new Error('JWT_SECRET is not defined in environment variables');\r\n        }\r\n        \r\n        const token = jwt.sign(payload, secret, { \r\n        expiresIn: '7d',\r\n        issuer: 'your-app-name' \r\n        });\r\n        \r\n        return token;\r\n    } catch (error) {\r\n        console.error('Error generating JWT token:', error);\r\n        throw new Error('Failed to generate token');\r\n    }\r\n    }\r\n\r\n    export function verifyToken(token: string) {\r\n    try {\r\n        const secret = process.env.JWT_SECRET;\r\n        \r\n        if (!secret) {\r\n        throw new Error('JWT_SECRET is not defined in environment variables');\r\n        }\r\n        \r\n        const decoded = jwt.verify(token, secret);\r\n        return decoded;\r\n    } catch (error) {\r\n        console.error('Error verifying JWT token:', error);\r\n        throw new Error('Invalid or expired token');\r\n    }\r\n    }"],"names":[],"mappings":";;;;;;AAAI;AACA;;;AAEO,eAAe,aAAa,QAAgB;IACnD,IAAI;QACA,MAAM,aAAa;QACnB,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QACnD,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM,IAAI,MAAM;IACpB;AACA;AAEO,eAAe,gBAAgB,QAAgB,EAAE,cAAsB;IAC9E,IAAI;QACA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;QAC/C,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IACpB;AACA;AAEO,SAAS,cAAc,OAAe;IAC7C,IAAI;QACA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;QAErC,IAAI,CAAC,QAAQ;YACb,MAAM,IAAI,MAAM;QAChB;QAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ;YACxC,WAAW;YACX,QAAQ;QACR;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IACpB;AACA;AAEO,SAAS,YAAY,KAAa;IACzC,IAAI;QACA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;QAErC,IAAI,CAAC,QAAQ;YACb,MAAM,IAAI,MAAM;QAChB;QAEA,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM,IAAI,MAAM;IACpB;AACA","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Egzon/Desktop/Gaming-NextJS/app/api/auth/me/route.ts"],"sourcesContent":["    // app/api/auth/me/route.ts\r\n    import { NextRequest, NextResponse } from 'next/server';\r\n    import { getUserFromToken } from '@/lib/auth';\r\n\r\n    export async function GET(req: NextRequest) {\r\n    const token = req.cookies.get('token')?.value;\r\n\r\n    if (!token) return NextResponse.json({ user: null });\r\n\r\n    const user = getUserFromToken(token);\r\n    return NextResponse.json({ user });\r\n    }\r\n"],"names":[],"mappings":"AAAI,2BAA2B;;;;AAC3B;AACA;;;AAEO,eAAe,IAAI,GAAgB;IAC1C,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IAExC,IAAI,CAAC,OAAO,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,MAAM;IAAK;IAElD,MAAM,OAAO,CAAA,GAAA,6GAAA,CAAA,mBAAgB,AAAD,EAAE;IAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;IAAK;AAChC","debugId":null}}]
}