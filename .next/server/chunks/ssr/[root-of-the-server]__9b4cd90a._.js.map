{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Egzon/Desktop/Gaming-NextJS/app/components/Animation.jsx"],"sourcesContent":["    'use client'\r\n    import React, { useEffect, useRef, useState } from 'react';\r\n    import * as THREE from 'three';\r\n    import { useRouter } from 'next/navigation';\r\n\r\n    export default function GamingHomepage() {\r\n    const mountRef = useRef(null);\r\n    const sceneRef = useRef(null);\r\n    const animationRef = useRef(null);\r\n    const router = useRouter();\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!mountRef.current) return;\r\n\r\n        // Scene setup\r\n        const scene = new THREE.Scene();\r\n        scene.fog = new THREE.Fog(0x0a0a0a, 10, 50);\r\n        sceneRef.current = scene;\r\n\r\n        // Camera\r\n        const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        window.innerWidth / window.innerHeight,\r\n        0.1,\r\n        1000\r\n        );\r\n        camera.position.set(0, 5, 15);\r\n\r\n        // Renderer\r\n        const renderer = new THREE.WebGLRenderer({ \r\n        antialias: true, \r\n        alpha: true \r\n        });\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setClearColor(0x000000, 0);\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        mountRef.current.appendChild(renderer.domElement);\r\n\r\n        // Lighting\r\n        const ambientLight = new THREE.AmbientLight(0x404040, 0.3);\r\n        scene.add(ambientLight);\r\n\r\n        const spotLight1 = new THREE.SpotLight(0xff4444, 2);\r\n        spotLight1.position.set(-10, 10, 5);\r\n        spotLight1.castShadow = true;\r\n        scene.add(spotLight1);\r\n\r\n        const spotLight2 = new THREE.SpotLight(0x4444ff, 2);\r\n        spotLight2.position.set(10, 10, 5);\r\n        spotLight2.castShadow = true;\r\n        scene.add(spotLight2);\r\n\r\n        const spotLight3 = new THREE.SpotLight(0x44ff44, 1.5);\r\n        spotLight3.position.set(0, 15, -5);\r\n        scene.add(spotLight3);\r\n\r\n        // Gaming Setup Objects\r\n        const objects = [];\r\n\r\n        // Gaming Monitor\r\n        const monitorGroup = new THREE.Group();\r\n        \r\n        // Monitor screen\r\n        const screenGeometry = new THREE.PlaneGeometry(4, 2.5);\r\n        const screenMaterial = new THREE.MeshBasicMaterial({ \r\n        color: 0x000033,\r\n        transparent: true,\r\n        opacity: 0.9\r\n        });\r\n        const screen = new THREE.Mesh(screenGeometry, screenMaterial);\r\n        screen.position.set(0, 2, 0);\r\n        monitorGroup.add(screen);\r\n\r\n        // Monitor frame\r\n        const frameGeometry = new THREE.BoxGeometry(4.3, 2.8, 0.1);\r\n        const frameMaterial = new THREE.MeshPhongMaterial({ color: 0x222222 });\r\n        const frame = new THREE.Mesh(frameGeometry, frameMaterial);\r\n        frame.position.set(0, 2, -0.05);\r\n        monitorGroup.add(frame);\r\n\r\n        // Monitor stand\r\n        const standGeometry = new THREE.CylinderGeometry(0.2, 0.3, 1.5);\r\n        const standMaterial = new THREE.MeshPhongMaterial({ color: 0x333333 });\r\n        const stand = new THREE.Mesh(standGeometry, standMaterial);\r\n        stand.position.set(0, 0.75, 0);\r\n        monitorGroup.add(stand);\r\n\r\n        scene.add(monitorGroup);\r\n        objects.push(monitorGroup);\r\n\r\n        // Gaming Keyboard\r\n        const keyboardGeometry = new THREE.BoxGeometry(3, 0.2, 1);\r\n        const keyboardMaterial = new THREE.MeshPhongMaterial({ color: 0x1a1a1a });\r\n        const keyboard = new THREE.Mesh(keyboardGeometry, keyboardMaterial);\r\n        keyboard.position.set(0, -0.5, 3);\r\n        keyboard.castShadow = true;\r\n        scene.add(keyboard);\r\n        objects.push(keyboard);\r\n\r\n        // Gaming Mouse\r\n        const mouseGeometry = new THREE.BoxGeometry(0.6, 0.15, 1);\r\n        const mouseMaterial = new THREE.MeshPhongMaterial({ color: 0xff4444 });\r\n        const mouse = new THREE.Mesh(mouseGeometry, mouseMaterial);\r\n        mouse.position.set(2.5, -0.4, 3);\r\n        mouse.castShadow = true;\r\n        scene.add(mouse);\r\n        objects.push(mouse);\r\n\r\n        // Gaming Headset\r\n        const headsetGroup = new THREE.Group();\r\n        \r\n        const headbandGeometry = new THREE.TorusGeometry(1, 0.1, 8, 20, Math.PI);\r\n        const headbandMaterial = new THREE.MeshPhongMaterial({ color: 0x222222 });\r\n        const headband = new THREE.Mesh(headbandGeometry, headbandMaterial);\r\n        headband.rotation.z = Math.PI;\r\n        headband.position.set(-3, 2, 2);\r\n        headsetGroup.add(headband);\r\n\r\n        const earcupGeometry = new THREE.SphereGeometry(0.4, 16, 16);\r\n        const earcupMaterial = new THREE.MeshPhongMaterial({ color: 0x333333 });\r\n        const leftEarcup = new THREE.Mesh(earcupGeometry, earcupMaterial);\r\n        leftEarcup.position.set(-3.8, 2, 2);\r\n        const rightEarcup = new THREE.Mesh(earcupGeometry, earcupMaterial);\r\n        rightEarcup.position.set(-2.2, 2, 2);\r\n        headsetGroup.add(leftEarcup);\r\n        headsetGroup.add(rightEarcup);\r\n\r\n        scene.add(headsetGroup);\r\n        objects.push(headsetGroup);\r\n\r\n        // Gaming Controller\r\n        const controllerGeometry = new THREE.BoxGeometry(1.2, 0.6, 0.3);\r\n        const controllerMaterial = new THREE.MeshPhongMaterial({ color: 0x4444ff });\r\n        const controller = new THREE.Mesh(controllerGeometry, controllerMaterial);\r\n        controller.position.set(3, -0.3, 1.5);\r\n        controller.rotation.x = -0.2;\r\n        controller.castShadow = true;\r\n        scene.add(controller);\r\n        objects.push(controller);\r\n\r\n        // Particle System\r\n        const particleCount = 1000;\r\n        const particlesGeometry = new THREE.BufferGeometry();\r\n        const particlesMaterial = new THREE.PointsMaterial({\r\n        color: 0xffffff,\r\n        size: 0.02,\r\n        transparent: true,\r\n        opacity: 0.8,\r\n        blending: THREE.AdditiveBlending\r\n        });\r\n\r\n        const positions = new Float32Array(particleCount * 3);\r\n        const colors = new Float32Array(particleCount * 3);\r\n\r\n        for (let i = 0; i < particleCount; i++) {\r\n        positions[i * 3] = (Math.random() - 0.5) * 50;\r\n        positions[i * 3 + 1] = (Math.random() - 0.5) * 50;\r\n        positions[i * 3 + 2] = (Math.random() - 0.5) * 50;\r\n\r\n        const color = new THREE.Color();\r\n        color.setHSL(Math.random(), 0.7, 0.5);\r\n        colors[i * 3] = color.r;\r\n        colors[i * 3 + 1] = color.g;\r\n        colors[i * 3 + 2] = color.b;\r\n        }\r\n\r\n        particlesGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n        particlesGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n        const particles = new THREE.Points(particlesGeometry, particlesMaterial);\r\n        scene.add(particles);\r\n\r\n        // Floating geometric shapes\r\n        const shapes = [];\r\n        const shapeGeometries = [\r\n        new THREE.OctahedronGeometry(0.3),\r\n        new THREE.TetrahedronGeometry(0.3),\r\n        new THREE.IcosahedronGeometry(0.3)\r\n        ];\r\n\r\n        for (let i = 0; i < 15; i++) {\r\n        const geometry = shapeGeometries[Math.floor(Math.random() * shapeGeometries.length)];\r\n        const material = new THREE.MeshPhongMaterial({\r\n            color: new THREE.Color().setHSL(Math.random(), 0.7, 0.6),\r\n            transparent: true,\r\n            opacity: 0.7,\r\n            wireframe: Math.random() > 0.5\r\n        });\r\n        const shape = new THREE.Mesh(geometry, material);\r\n        \r\n        shape.position.set(\r\n            (Math.random() - 0.5) * 30,\r\n            (Math.random() - 0.5) * 20,\r\n            (Math.random() - 0.5) * 30\r\n        );\r\n        \r\n        shape.userData = {\r\n            rotationSpeed: {\r\n            x: (Math.random() - 0.5) * 0.02,\r\n            y: (Math.random() - 0.5) * 0.02,\r\n            z: (Math.random() - 0.5) * 0.02\r\n            },\r\n            floatSpeed: Math.random() * 0.01 + 0.005\r\n        };\r\n        \r\n        scene.add(shape);\r\n        shapes.push(shape);\r\n        }\r\n\r\n        // Screen glow effect\r\n        const glowGeometry = new THREE.PlaneGeometry(4.5, 3);\r\n        const glowMaterial = new THREE.MeshBasicMaterial({\r\n        color: 0x4444ff,\r\n        transparent: true,\r\n        opacity: 0.1,\r\n        blending: THREE.AdditiveBlending\r\n        });\r\n        const screenGlow = new THREE.Mesh(glowGeometry, glowMaterial);\r\n        screenGlow.position.set(0, 2, 0.01);\r\n        scene.add(screenGlow);\r\n\r\n        // Animation loop\r\n        let time = 0;\r\n        const animate = () => {\r\n        time += 0.01;\r\n\r\n        // Rotate main objects\r\n        objects.forEach((obj, index) => {\r\n            obj.rotation.y += 0.005 + index * 0.001;\r\n            obj.position.y += Math.sin(time + index) * 0.002;\r\n        });\r\n\r\n        // Animate particles\r\n        const positions = particles.geometry.attributes.position.array;\r\n        for (let i = 0; i < particleCount; i++) {\r\n            positions[i * 3 + 1] += Math.sin(time + i * 0.01) * 0.01;\r\n        }\r\n        particles.geometry.attributes.position.needsUpdate = true;\r\n        particles.rotation.y += 0.001;\r\n\r\n        // Animate floating shapes\r\n        shapes.forEach((shape) => {\r\n            shape.rotation.x += shape.userData.rotationSpeed.x;\r\n            shape.rotation.y += shape.userData.rotationSpeed.y;\r\n            shape.rotation.z += shape.userData.rotationSpeed.z;\r\n            shape.position.y += Math.sin(time + shape.position.x) * shape.userData.floatSpeed;\r\n        });\r\n\r\n        // Animate camera\r\n        camera.position.x = Math.sin(time * 0.5) * 3;\r\n        camera.position.z = 15 + Math.cos(time * 0.3) * 2;\r\n        camera.lookAt(0, 1, 0);\r\n\r\n        // Animate lights\r\n        spotLight1.intensity = 2 + Math.sin(time * 2) * 0.5;\r\n        spotLight2.intensity = 2 + Math.cos(time * 2) * 0.5;\r\n        \r\n        // Screen glow animation\r\n        screenGlow.material.opacity = 0.1 + Math.sin(time * 3) * 0.05;\r\n\r\n        renderer.render(scene, camera);\r\n        animationRef.current = requestAnimationFrame(animate);\r\n        };\r\n\r\n        animate();\r\n        setIsLoaded(true);\r\n\r\n        // Handle resize\r\n        const handleResize = () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // Cleanup\r\n        return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n        if (animationRef.current) {\r\n            cancelAnimationFrame(animationRef.current);\r\n        }\r\n        if (mountRef.current && renderer.domElement) {\r\n            mountRef.current.removeChild(renderer.domElement);\r\n        }\r\n        renderer.dispose();\r\n        };\r\n    }, []);\r\n\r\n    const handleEnterShop = () => {\r\n        router.push('/games'); // Navigate to your games page\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative w-full h-screen overflow-hidden bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900\">\r\n        {/* 3D Canvas */}\r\n        <div ref={mountRef} className=\"absolute inset-0\" />\r\n        \r\n        {/* Overlay Content */}\r\n        <div className=\"absolute inset-0 flex items-center justify-center z-10 pointer-events-none\">\r\n            <div className=\"text-center space-y-8 pointer-events-auto\">\r\n            {/* Animated Title */}\r\n            <h1 className={`text-6xl md:text-8xl font-bold bg-gradient-to-r from-pink-500 via-purple-500 via-blue-500 to-green-500 bg-clip-text text-transparent bg-size-200 animate-gradient transition-opacity duration-1000 ${isLoaded ? 'opacity-100' : 'opacity-0'}`}>\r\n                GAME ZONE\r\n            </h1>\r\n            \r\n            {/* Subtitle */}\r\n            <p className={`text-xl md:text-2xl text-white/80 font-light transition-opacity duration-1000 delay-500 ${isLoaded ? 'opacity-100' : 'opacity-0'}`}>\r\n                Ultimate Gaming Experience Awaits\r\n            </p>\r\n            \r\n            {/* Enter Button */}\r\n            <button\r\n                onClick={handleEnterShop}\r\n                className={`group relative px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full text-white font-semibold text-lg transition-all duration-300 hover:scale-110 hover:shadow-2xl hover:shadow-purple-500/50 active:scale-95 ${isLoaded ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4'}`}\r\n                style={{ transitionDelay: '1s' }}\r\n            >\r\n                <span className=\"relative z-10\">Enter Game Store</span>\r\n                <div className=\"absolute inset-0 bg-gradient-to-r from-pink-600 to-purple-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n            </button>\r\n            \r\n            {/* Gaming Stats */}\r\n            <div className={`flex space-x-8 text-center text-white/60 transition-opacity duration-1000 delay-700 ${isLoaded ? 'opacity-100' : 'opacity-0'}`}>\r\n                <div>\r\n                <div className=\"text-2xl font-bold text-green-400\">1000+</div>\r\n                <div className=\"text-sm\">Games</div>\r\n                </div>\r\n                <div>\r\n                <div className=\"text-2xl font-bold text-blue-400\">50K+</div>\r\n                <div className=\"text-sm\">Players</div>\r\n                </div>\r\n                <div>\r\n                <div className=\"text-2xl font-bold text-purple-400\">24/7</div>\r\n                <div className=\"text-sm\">Support</div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n        {/* Loading overlay */}\r\n        {!isLoaded && (\r\n            <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center z-20\">\r\n            <div className=\"text-white text-xl\">Loading 3D Experience...</div>\r\n            </div>\r\n        )}\r\n\r\n        <style jsx>{`\r\n            @keyframes gradient {\r\n            0%, 100% { background-position: 0% 50%; }\r\n            50% { background-position: 100% 50%; }\r\n            }\r\n            .animate-gradient {\r\n            animation: gradient 3s ease infinite;\r\n            background-size: 200% 200%;\r\n            }\r\n            .bg-size-200 {\r\n            background-size: 200% 200%;\r\n            }\r\n        `}</style>\r\n        </div>\r\n    );\r\n    }"],"names":[],"mappings":"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","debugId":null}}]
}