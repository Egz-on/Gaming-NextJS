{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Egzon/Desktop/Gaming-NextJS/app/game/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Navigation, Pagination, Autoplay } from 'swiper/modules';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\n\r\ntype GameId = {\r\n    params: { id: string }\r\n}\r\n\r\nexport default function GameDetail({ params }: GameId) {\r\n    const [game, setGame] = useState<any>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchGame = async () => {\r\n            try {\r\n                // For testing purposes, let's use a public API key or mock data\r\n                const res = await fetch(`https://api.rawg.io/api/games/${params.id}?key=RAWG_API_KEY`)\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch game data')\r\n                }\r\n                const gameData = await res.json();\r\n                setGame(gameData);\r\n            } catch (err) {\r\n                setError(err instanceof Error ? err.message : 'An error occurred');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchGame();\r\n    }, [params.id]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container mx-auto px-4 py-20\">\r\n                <div className=\"flex justify-center items-center h-64\">\r\n                    <div className=\"text-xl\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container mx-auto px-4 py-20\">\r\n                <div className=\"flex justify-center items-center h-64\">\r\n                    <div className=\"text-xl text-red-500\">Error: {error}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!game) {\r\n        return (\r\n            <div className=\"container mx-auto px-4 py-20\">\r\n                <div className=\"flex justify-center items-center h-64\">\r\n                    <div className=\"text-xl\">Game not found</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Mock screenshots for testing if API doesn't return them\r\n    const screenshots = game.short_screenshots || [\r\n        { image: \"https://media.rawg.io/media/games/456/456dea5e1c7e3cd07060c14e96612001.jpg\" },\r\n        { image: \"https://media.rawg.io/media/games/20a/20aa03a10cda45239fe22d035c0ebe64.jpg\" },\r\n        { image: \"https://media.rawg.io/media/games/328/3283617cb7d75d67257fc58339188742.jpg\" }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4\">\r\n            <div className=\"flex flex-col lg:flex-row gap-8 py-20\">\r\n                {/* Main Game Image with Screenshot Overlay */}\r\n                <div className=\"relative lg:w-1/2\">\r\n                    <div className=\"relative rounded-xl shadow-md overflow-hidden group\">\r\n                        <img\r\n                            src={game.background_image || \"https://via.placeholder.com/600x400?text=Game+Image\"}\r\n                            alt={game.name}\r\n                            className=\"w-full h-auto object-cover\"\r\n                        />\r\n                        \r\n                        {/* Screenshot Carousel Overlay */}\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-80 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center\">\r\n                            <div className=\"w-full h-full p-4\">\r\n                                <Swiper\r\n                                    modules={[Navigation, Pagination, Autoplay]}\r\n                                    spaceBetween={10}\r\n                                    slidesPerView={1}\r\n                                    navigation={{\r\n                                        nextEl: '.swiper-button-next',\r\n                                        prevEl: '.swiper-button-prev',\r\n                                    }}\r\n                                    pagination={{ \r\n                                        clickable: true,\r\n                                        el: '.swiper-pagination'\r\n                                    }}\r\n                                    autoplay={{\r\n                                        delay: 3000,\r\n                                        disableOnInteraction: false,\r\n                                    }}\r\n                                    loop={true}\r\n                                    className=\"h-full w-full\"\r\n                                    style={{ \r\n                                        '--swiper-navigation-color': '#fff',\r\n                                        '--swiper-pagination-color': '#fff',\r\n                                    } as React.CSSProperties}\r\n                                >\r\n                                    {screenshots.map((screenshot: any, index: number) => (\r\n                                        <SwiperSlide key={index} className=\"flex items-center justify-center\">\r\n                                            <img\r\n                                                src={screenshot.image}\r\n                                                alt={`${game.name} screenshot ${index + 1}`}\r\n                                                className=\"max-w-full max-h-full object-contain rounded\"\r\n                                                style={{ maxHeight: '80%' }}\r\n                                            />\r\n                                        </SwiperSlide>\r\n                                    ))}\r\n                                </Swiper>\r\n                                \r\n                                {/* Custom navigation buttons */}\r\n                                <div className=\"swiper-button-prev\"></div>\r\n                                <div className=\"swiper-button-next\"></div>\r\n                                <div className=\"swiper-pagination\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Game Information */}\r\n                <div className=\"lg:w-1/2 flex flex-col justify-start\">\r\n                    <h1 className=\"text-4xl font-bold mb-6 text-center lg:text-left\">{game.name}</h1>\r\n                    \r\n                    {/* Debug info */}\r\n                    <div className=\"mb-4 p-2 bg-gray-100 rounded text-sm\">\r\n                        <p>Screenshots available: {screenshots.length}</p>\r\n                        <p>Hover over the image to see the carousel</p>\r\n                    </div>\r\n                    \r\n                    {/* Additional game info */}\r\n                    <div className=\"space-y-4\">\r\n                        {game.released && (\r\n                            <p className=\"text-lg\">\r\n                                <span className=\"font-semibold\">Release Date:</span> {game.released}\r\n                            </p>\r\n                        )}\r\n                        \r\n                        {game.rating && (\r\n                            <p className=\"text-lg\">\r\n                                <span className=\"font-semibold\">Rating:</span> {game.rating}/5\r\n                            </p>\r\n                        )}\r\n                        \r\n                        {game.genres && game.genres.length > 0 && (\r\n                            <p className=\"text-lg\">\r\n                                <span className=\"font-semibold\">Genres:</span> {game.genres.map((genre: any) => genre.name).join(', ')}\r\n                            </p>\r\n                        )}\r\n                        \r\n                        {game.description_raw && (\r\n                            <div className=\"mt-6\">\r\n                                <h2 className=\"text-xl font-semibold mb-2\">Description</h2>\r\n                                <p className=\"text-gray-700 leading-relaxed line-clamp-6\">{game.description_raw}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Standalone Swiper for testing */}\r\n            <div className=\"mt-20\">\r\n                <h2 className=\"text-2xl font-bold mb-4 text-center\">Test Swiper (Always Visible)</h2>\r\n                <div className=\"max-w-2xl mx-auto\">\r\n                    <Swiper\r\n                        modules={[Navigation, Pagination, Autoplay]}\r\n                        spaceBetween={30}\r\n                        slidesPerView={1}\r\n                        navigation\r\n                        pagination={{ clickable: true }}\r\n                        autoplay={{ delay: 2000 }}\r\n                        loop={true}\r\n                        className=\"h-64\"\r\n                    >\r\n                        {screenshots.map((screenshot: any, index: number) => (\r\n                            <SwiperSlide key={index} className=\"flex items-center justify-center bg-gray-200 rounded\">\r\n                                <img\r\n                                    src={screenshot.image}\r\n                                    alt={`Test slide ${index + 1}`}\r\n                                    className=\"max-w-full max-h-full object-contain\"\r\n                                />\r\n                            </SwiperSlide>\r\n                        ))}\r\n                    </Swiper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}