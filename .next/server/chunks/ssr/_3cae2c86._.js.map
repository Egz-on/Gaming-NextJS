{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/egz/Desktop/Gaming-NextJS/lib/api.ts"],"sourcesContent":["    const API_BASE_URL = '/api';\r\n\r\n    // Register User\r\n    export async function registerUser(userData) {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n    }\r\n\r\n    return data;\r\n    }\r\n\r\n    // Login User\r\n    export async function loginUser(credentials) {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n    }\r\n\r\n    return data;\r\n    }\r\n\r\n    // Verify JWT Token\r\n    export async function verifyToken(token) {\r\n    const response = await fetch(`${API_BASE_URL}/auth/verify`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Token verification failed');\r\n    }\r\n\r\n    return data;\r\n    }\r\n"],"names":[],"mappings":";;;;;AAAI,MAAM,eAAe;AAGd,eAAe,aAAa,QAAQ;IAC3C,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,cAAc,CAAC,EAAE;QAC1D,QAAQ;QACR,SAAS;YACT,gBAAgB;QAChB;QACA,MAAM,KAAK,SAAS,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;IACpC;IAEA,OAAO;AACP;AAGO,eAAe,UAAU,WAAW;IAC3C,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,WAAW,CAAC,EAAE;QACvD,QAAQ;QACR,SAAS;YACT,gBAAgB;QAChB;QACA,MAAM,KAAK,SAAS,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;IACpC;IAEA,OAAO;AACP;AAGO,eAAe,YAAY,KAAK;IACvC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,YAAY,CAAC,EAAE;QACxD,QAAQ;QACR,SAAS;YACT,iBAAiB,CAAC,OAAO,EAAE,OAAO;YAClC,gBAAgB;QAChB;IACJ;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;IACpC;IAEA,OAAO;AACP","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/egz/Desktop/Gaming-NextJS/app/components/Ballpit.tsx"],"sourcesContent":["    import React, { useRef, useEffect } from \"react\";\r\n    import {\r\n    Clock,\r\n    PerspectiveCamera,\r\n    Scene,\r\n    WebGLRenderer,\r\n    WebGLRendererParameters,\r\n    SRGBColorSpace,\r\n    MathUtils,\r\n    Vector2,\r\n    Vector3,\r\n    MeshPhysicalMaterial,\r\n    ShaderChunk,\r\n    Color,\r\n    Object3D,\r\n    InstancedMesh,\r\n    PMREMGenerator,\r\n    SphereGeometry,\r\n    AmbientLight,\r\n    PointLight,\r\n    ACESFilmicToneMapping,\r\n    Raycaster,\r\n    Plane,\r\n    } from \"three\";\r\n    import { RoomEnvironment } from \"three/examples/jsm/environments/RoomEnvironment.js\";\r\n    import { Observer } from \"gsap/Observer\";\r\n    import { gsap } from \"gsap\";\r\n\r\n    gsap.registerPlugin(Observer);\r\n\r\n    interface XConfig {\r\n    canvas?: HTMLCanvasElement;\r\n    id?: string;\r\n    rendererOptions?: Partial<WebGLRendererParameters>;\r\n    size?: \"parent\" | { width: number; height: number };\r\n    }\r\n\r\n    interface SizeData {\r\n    width: number;\r\n    height: number;\r\n    wWidth: number;\r\n    wHeight: number;\r\n    ratio: number;\r\n    pixelRatio: number;\r\n    }\r\n\r\n    class X {\r\n    #config: XConfig;\r\n    #postprocessing: any;\r\n    #resizeObserver?: ResizeObserver;\r\n    #intersectionObserver?: IntersectionObserver;\r\n    #resizeTimer?: number;\r\n    #animationFrameId: number = 0;\r\n    #clock: Clock = new Clock();\r\n    #animationState = { elapsed: 0, delta: 0 };\r\n    #isAnimating: boolean = false;\r\n    #isVisible: boolean = false;\r\n\r\n    canvas!: HTMLCanvasElement;\r\n    camera!: PerspectiveCamera;\r\n    cameraMinAspect?: number;\r\n    cameraMaxAspect?: number;\r\n    cameraFov!: number;\r\n    maxPixelRatio?: number;\r\n    minPixelRatio?: number;\r\n    scene!: Scene;\r\n    renderer!: WebGLRenderer;\r\n    size: SizeData = {\r\n        width: 0,\r\n        height: 0,\r\n        wWidth: 0,\r\n        wHeight: 0,\r\n        ratio: 0,\r\n        pixelRatio: 0,\r\n    };\r\n\r\n    render: () => void = this.#render.bind(this);\r\n    onBeforeRender: (state: { elapsed: number; delta: number }) => void =\r\n        () => {};\r\n    onAfterRender: (state: { elapsed: number; delta: number }) => void = () => {};\r\n    onAfterResize: (size: SizeData) => void = () => {};\r\n    isDisposed: boolean = false;\r\n\r\n    constructor(config: XConfig) {\r\n        this.#config = { ...config };\r\n        this.#initCamera();\r\n        this.#initScene();\r\n        this.#initRenderer();\r\n        this.resize();\r\n        this.#initObservers();\r\n    }\r\n\r\n    #initCamera() {\r\n        this.camera = new PerspectiveCamera();\r\n        this.cameraFov = this.camera.fov;\r\n    }\r\n\r\n    #initScene() {\r\n        this.scene = new Scene();\r\n    }\r\n\r\n    #initRenderer() {\r\n        if (this.#config.canvas) {\r\n        this.canvas = this.#config.canvas;\r\n        } else if (this.#config.id) {\r\n        const elem = document.getElementById(this.#config.id);\r\n        if (elem instanceof HTMLCanvasElement) {\r\n            this.canvas = elem;\r\n        } else {\r\n            console.error(\"Three: Missing canvas or id parameter\");\r\n        }\r\n        } else {\r\n        console.error(\"Three: Missing canvas or id parameter\");\r\n        }\r\n        this.canvas!.style.display = \"block\";\r\n        const rendererOptions: WebGLRendererParameters = {\r\n        canvas: this.canvas,\r\n        powerPreference: \"high-performance\",\r\n        ...(this.#config.rendererOptions ?? {}),\r\n        };\r\n        this.renderer = new WebGLRenderer(rendererOptions);\r\n        this.renderer.outputColorSpace = SRGBColorSpace;\r\n    }\r\n\r\n    #initObservers() {\r\n        if (!(this.#config.size instanceof Object)) {\r\n        window.addEventListener(\"resize\", this.#onResize.bind(this));\r\n        if (this.#config.size === \"parent\" && this.canvas.parentNode) {\r\n            this.#resizeObserver = new ResizeObserver(this.#onResize.bind(this));\r\n            this.#resizeObserver.observe(this.canvas.parentNode as Element);\r\n        }\r\n        }\r\n        this.#intersectionObserver = new IntersectionObserver(\r\n        this.#onIntersection.bind(this),\r\n        { root: null, rootMargin: \"0px\", threshold: 0 }\r\n        );\r\n        this.#intersectionObserver.observe(this.canvas);\r\n        document.addEventListener(\r\n        \"visibilitychange\",\r\n        this.#onVisibilityChange.bind(this)\r\n        );\r\n    }\r\n\r\n    #onResize() {\r\n        if (this.#resizeTimer) clearTimeout(this.#resizeTimer);\r\n        this.#resizeTimer = window.setTimeout(this.resize.bind(this), 100);\r\n    }\r\n\r\n    resize() {\r\n        let w: number, h: number;\r\n        if (this.#config.size instanceof Object) {\r\n        w = this.#config.size.width;\r\n        h = this.#config.size.height;\r\n        } else if (this.#config.size === \"parent\" && this.canvas.parentNode) {\r\n        w = (this.canvas.parentNode as HTMLElement).offsetWidth;\r\n        h = (this.canvas.parentNode as HTMLElement).offsetHeight;\r\n        } else {\r\n        w = window.innerWidth;\r\n        h = window.innerHeight;\r\n        }\r\n        this.size.width = w;\r\n        this.size.height = h;\r\n        this.size.ratio = w / h;\r\n        this.#updateCamera();\r\n        this.#updateRenderer();\r\n        this.onAfterResize(this.size);\r\n    }\r\n\r\n    #updateCamera() {\r\n        this.camera.aspect = this.size.width / this.size.height;\r\n        if (this.camera.isPerspectiveCamera && this.cameraFov) {\r\n        if (this.cameraMinAspect && this.camera.aspect < this.cameraMinAspect) {\r\n            this.#adjustFov(this.cameraMinAspect);\r\n        } else if (\r\n            this.cameraMaxAspect &&\r\n            this.camera.aspect > this.cameraMaxAspect\r\n        ) {\r\n            this.#adjustFov(this.cameraMaxAspect);\r\n        } else {\r\n            this.camera.fov = this.cameraFov;\r\n        }\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n        this.updateWorldSize();\r\n    }\r\n\r\n    #adjustFov(aspect: number) {\r\n        const tanFov = Math.tan(MathUtils.degToRad(this.cameraFov / 2));\r\n        const newTan = tanFov / (this.camera.aspect / aspect);\r\n        this.camera.fov = 2 * MathUtils.radToDeg(Math.atan(newTan));\r\n    }\r\n\r\n    updateWorldSize() {\r\n        if (this.camera.isPerspectiveCamera) {\r\n        const fovRad = (this.camera.fov * Math.PI) / 180;\r\n        this.size.wHeight =\r\n            2 * Math.tan(fovRad / 2) * this.camera.position.length();\r\n        this.size.wWidth = this.size.wHeight * this.camera.aspect;\r\n        } else if ((this.camera as any).isOrthographicCamera) {\r\n        const cam = this.camera as any;\r\n        this.size.wHeight = cam.top - cam.bottom;\r\n        this.size.wWidth = cam.right - cam.left;\r\n        }\r\n    }\r\n\r\n    #updateRenderer() {\r\n        this.renderer.setSize(this.size.width, this.size.height);\r\n        this.#postprocessing?.setSize(this.size.width, this.size.height);\r\n        let pr = window.devicePixelRatio;\r\n        if (this.maxPixelRatio && pr > this.maxPixelRatio) {\r\n        pr = this.maxPixelRatio;\r\n        } else if (this.minPixelRatio && pr < this.minPixelRatio) {\r\n        pr = this.minPixelRatio;\r\n        }\r\n        this.renderer.setPixelRatio(pr);\r\n        this.size.pixelRatio = pr;\r\n    }\r\n\r\n    get postprocessing() {\r\n        return this.#postprocessing;\r\n    }\r\n    set postprocessing(value: any) {\r\n        this.#postprocessing = value;\r\n        this.render = value.render.bind(value);\r\n    }\r\n\r\n    #onIntersection(entries: IntersectionObserverEntry[]) {\r\n        this.#isAnimating = entries[0].isIntersecting;\r\n        this.#isAnimating ? this.#startAnimation() : this.#stopAnimation();\r\n    }\r\n\r\n    #onVisibilityChange() {\r\n        if (this.#isAnimating) {\r\n        document.hidden ? this.#stopAnimation() : this.#startAnimation();\r\n        }\r\n    }\r\n\r\n    #startAnimation() {\r\n        if (this.#isVisible) return;\r\n        const animateFrame = () => {\r\n        this.#animationFrameId = requestAnimationFrame(animateFrame);\r\n        this.#animationState.delta = this.#clock.getDelta();\r\n        this.#animationState.elapsed += this.#animationState.delta;\r\n        this.onBeforeRender(this.#animationState);\r\n        this.render();\r\n        this.onAfterRender(this.#animationState);\r\n        };\r\n        this.#isVisible = true;\r\n        this.#clock.start();\r\n        animateFrame();\r\n    }\r\n\r\n    #stopAnimation() {\r\n        if (this.#isVisible) {\r\n        cancelAnimationFrame(this.#animationFrameId);\r\n        this.#isVisible = false;\r\n        this.#clock.stop();\r\n        }\r\n    }\r\n\r\n    #render() {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    clear() {\r\n        this.scene.traverse((obj) => {\r\n        if (\r\n            (obj as any).isMesh &&\r\n            typeof (obj as any).material === \"object\" &&\r\n            (obj as any).material !== null\r\n        ) {\r\n            Object.keys((obj as any).material).forEach((key) => {\r\n            const matProp = (obj as any).material[key];\r\n            if (\r\n                matProp &&\r\n                typeof matProp === \"object\" &&\r\n                typeof matProp.dispose === \"function\"\r\n            ) {\r\n                matProp.dispose();\r\n            }\r\n            });\r\n            (obj as any).material.dispose();\r\n            (obj as any).geometry.dispose();\r\n        }\r\n        });\r\n        this.scene.clear();\r\n    }\r\n\r\n    dispose() {\r\n        this.#onResizeCleanup();\r\n        this.#stopAnimation();\r\n        this.clear();\r\n        this.#postprocessing?.dispose();\r\n        this.renderer.dispose();\r\n        this.isDisposed = true;\r\n    }\r\n\r\n    #onResizeCleanup() {\r\n        window.removeEventListener(\"resize\", this.#onResize.bind(this));\r\n        this.#resizeObserver?.disconnect();\r\n        this.#intersectionObserver?.disconnect();\r\n        document.removeEventListener(\r\n        \"visibilitychange\",\r\n        this.#onVisibilityChange.bind(this)\r\n        );\r\n    }\r\n    }\r\n\r\n    interface WConfig {\r\n    count: number;\r\n    maxX: number;\r\n    maxY: number;\r\n    maxZ: number;\r\n    maxSize: number;\r\n    minSize: number;\r\n    size0: number;\r\n    gravity: number;\r\n    friction: number;\r\n    wallBounce: number;\r\n    maxVelocity: number;\r\n    controlSphere0?: boolean;\r\n    followCursor?: boolean;\r\n    }\r\n\r\n    class W {\r\n    config: WConfig;\r\n    positionData: Float32Array;\r\n    velocityData: Float32Array;\r\n    sizeData: Float32Array;\r\n    center: Vector3 = new Vector3();\r\n\r\n    constructor(config: WConfig) {\r\n        this.config = config;\r\n        this.positionData = new Float32Array(3 * config.count).fill(0);\r\n        this.velocityData = new Float32Array(3 * config.count).fill(0);\r\n        this.sizeData = new Float32Array(config.count).fill(1);\r\n        this.center = new Vector3();\r\n        this.#initializePositions();\r\n        this.setSizes();\r\n    }\r\n\r\n    #initializePositions() {\r\n        const { config, positionData } = this;\r\n        this.center.toArray(positionData, 0);\r\n        for (let i = 1; i < config.count; i++) {\r\n        const idx = 3 * i;\r\n        positionData[idx] = MathUtils.randFloatSpread(2 * config.maxX);\r\n        positionData[idx + 1] = MathUtils.randFloatSpread(2 * config.maxY);\r\n        positionData[idx + 2] = MathUtils.randFloatSpread(2 * config.maxZ);\r\n        }\r\n    }\r\n\r\n    setSizes() {\r\n        const { config, sizeData } = this;\r\n        sizeData[0] = config.size0;\r\n        for (let i = 1; i < config.count; i++) {\r\n        sizeData[i] = MathUtils.randFloat(config.minSize, config.maxSize);\r\n        }\r\n    }\r\n\r\n    update(deltaInfo: { delta: number }) {\r\n        const { config, center, positionData, sizeData, velocityData } = this;\r\n        let startIdx = 0;\r\n        if (config.controlSphere0) {\r\n        startIdx = 1;\r\n        const firstVec = new Vector3().fromArray(positionData, 0);\r\n        firstVec.lerp(center, 0.1).toArray(positionData, 0);\r\n        new Vector3(0, 0, 0).toArray(velocityData, 0);\r\n        }\r\n        for (let idx = startIdx; idx < config.count; idx++) {\r\n        const base = 3 * idx;\r\n        const pos = new Vector3().fromArray(positionData, base);\r\n        const vel = new Vector3().fromArray(velocityData, base);\r\n        vel.y -= deltaInfo.delta * config.gravity * sizeData[idx];\r\n        vel.multiplyScalar(config.friction);\r\n        vel.clampLength(0, config.maxVelocity);\r\n        pos.add(vel);\r\n        pos.toArray(positionData, base);\r\n        vel.toArray(velocityData, base);\r\n        }\r\n        for (let idx = startIdx; idx < config.count; idx++) {\r\n        const base = 3 * idx;\r\n        const pos = new Vector3().fromArray(positionData, base);\r\n        const vel = new Vector3().fromArray(velocityData, base);\r\n        const radius = sizeData[idx];\r\n        for (let jdx = idx + 1; jdx < config.count; jdx++) {\r\n            const otherBase = 3 * jdx;\r\n            const otherPos = new Vector3().fromArray(positionData, otherBase);\r\n            const otherVel = new Vector3().fromArray(velocityData, otherBase);\r\n            const diff = new Vector3().copy(otherPos).sub(pos);\r\n            const dist = diff.length();\r\n            const sumRadius = radius + sizeData[jdx];\r\n            if (dist < sumRadius) {\r\n            const overlap = sumRadius - dist;\r\n            const correction = diff.normalize().multiplyScalar(0.5 * overlap);\r\n            const velCorrection = correction\r\n                .clone()\r\n                .multiplyScalar(Math.max(vel.length(), 1));\r\n            pos.sub(correction);\r\n            vel.sub(velCorrection);\r\n            pos.toArray(positionData, base);\r\n            vel.toArray(velocityData, base);\r\n            otherPos.add(correction);\r\n            otherVel.add(\r\n                correction.clone().multiplyScalar(Math.max(otherVel.length(), 1))\r\n            );\r\n            otherPos.toArray(positionData, otherBase);\r\n            otherVel.toArray(velocityData, otherBase);\r\n            }\r\n        }\r\n        if (config.controlSphere0) {\r\n            const diff = new Vector3()\r\n            .copy(new Vector3().fromArray(positionData, 0))\r\n            .sub(pos);\r\n            const d = diff.length();\r\n            const sumRadius0 = radius + sizeData[0];\r\n            if (d < sumRadius0) {\r\n            const correction = diff.normalize().multiplyScalar(sumRadius0 - d);\r\n            const velCorrection = correction\r\n                .clone()\r\n                .multiplyScalar(Math.max(vel.length(), 2));\r\n            pos.sub(correction);\r\n            vel.sub(velCorrection);\r\n            }\r\n        }\r\n        if (Math.abs(pos.x) + radius > config.maxX) {\r\n            pos.x = Math.sign(pos.x) * (config.maxX - radius);\r\n            vel.x = -vel.x * config.wallBounce;\r\n        }\r\n        if (config.gravity === 0) {\r\n            if (Math.abs(pos.y) + radius > config.maxY) {\r\n            pos.y = Math.sign(pos.y) * (config.maxY - radius);\r\n            vel.y = -vel.y * config.wallBounce;\r\n            }\r\n        } else if (pos.y - radius < -config.maxY) {\r\n            pos.y = -config.maxY + radius;\r\n            vel.y = -vel.y * config.wallBounce;\r\n        }\r\n        const maxBoundary = Math.max(config.maxZ, config.maxSize);\r\n        if (Math.abs(pos.z) + radius > maxBoundary) {\r\n            pos.z = Math.sign(pos.z) * (config.maxZ - radius);\r\n            vel.z = -vel.z * config.wallBounce;\r\n        }\r\n        pos.toArray(positionData, base);\r\n        vel.toArray(velocityData, base);\r\n        }\r\n    }\r\n    }\r\n\r\n    class Y extends MeshPhysicalMaterial {\r\n    uniforms: { [key: string]: { value: any } } = {\r\n        thicknessDistortion: { value: 0.1 },\r\n        thicknessAmbient: { value: 0 },\r\n        thicknessAttenuation: { value: 0.1 },\r\n        thicknessPower: { value: 2 },\r\n        thicknessScale: { value: 10 },\r\n    };\r\n\r\n    constructor(params: any) {\r\n        super(params);\r\n        this.defines = { USE_UV: \"\" };\r\n        this.onBeforeCompile = (shader) => {\r\n        Object.assign(shader.uniforms, this.uniforms);\r\n        shader.fragmentShader =\r\n            `\r\n            uniform float thicknessPower;\r\n            uniform float thicknessScale;\r\n            uniform float thicknessDistortion;\r\n            uniform float thicknessAmbient;\r\n            uniform float thicknessAttenuation;\r\n            ` + shader.fragmentShader;\r\n        shader.fragmentShader = shader.fragmentShader.replace(\r\n            \"void main() {\",\r\n            `\r\n            void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, inout ReflectedLight reflectedLight) {\r\n            vec3 scatteringHalf = normalize(directLight.direction + (geometryNormal * thicknessDistortion));\r\n            float scatteringDot = pow(saturate(dot(geometryViewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\r\n            #ifdef USE_COLOR\r\n                vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * vColor;\r\n            #else\r\n                vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * diffuse;\r\n            #endif\r\n            reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\r\n            }\r\n\r\n            void main() {\r\n            `\r\n        );\r\n        const lightsChunk = ShaderChunk.lights_fragment_begin.replaceAll(\r\n            \"RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\",\r\n            `\r\n            RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n            RE_Direct_Scattering(directLight, vUv, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, reflectedLight);\r\n            `\r\n        );\r\n        shader.fragmentShader = shader.fragmentShader.replace(\r\n            \"#include <lights_fragment_begin>\",\r\n            lightsChunk\r\n        );\r\n        if (this.onBeforeCompile2) this.onBeforeCompile2(shader);\r\n        };\r\n    }\r\n    onBeforeCompile2?: (shader: any) => void;\r\n    }\r\n\r\n    const XConfig = {\r\n    count: 200,\r\n    colors: [0, 0, 0],\r\n    ambientColor: 0xffffff,\r\n    ambientIntensity: 1,\r\n    lightIntensity: 200,\r\n    materialParams: {\r\n        metalness: 0.5,\r\n        roughness: 0.5,\r\n        clearcoat: 1,\r\n        clearcoatRoughness: 0.15,\r\n    },\r\n    minSize: 0.5,\r\n    maxSize: 1,\r\n    size0: 1,\r\n    gravity: 0.5,\r\n    friction: 0.9975,\r\n    wallBounce: 0.95,\r\n    maxVelocity: 0.15,\r\n    maxX: 5,\r\n    maxY: 5,\r\n    maxZ: 2,\r\n    controlSphere0: false,\r\n    followCursor: true,\r\n    };\r\n\r\n    const U = new Object3D();\r\n\r\n    let globalPointerActive = false;\r\n    const pointerPosition = new Vector2();\r\n\r\n    interface PointerData {\r\n    position: Vector2;\r\n    nPosition: Vector2;\r\n    hover: boolean;\r\n    onEnter: (data: PointerData) => void;\r\n    onMove: (data: PointerData) => void;\r\n    onClick: (data: PointerData) => void;\r\n    onLeave: (data: PointerData) => void;\r\n    dispose?: () => void;\r\n    }\r\n\r\n    const pointerMap = new Map<HTMLElement, PointerData>();\r\n\r\n    function createPointerData(\r\n    options: Partial<PointerData> & { domElement: HTMLElement }\r\n    ): PointerData {\r\n    const defaultData: PointerData = {\r\n        position: new Vector2(),\r\n        nPosition: new Vector2(),\r\n        hover: false,\r\n        onEnter: () => {},\r\n        onMove: () => {},\r\n        onClick: () => {},\r\n        onLeave: () => {},\r\n        ...options,\r\n    };\r\n    if (!pointerMap.has(options.domElement)) {\r\n        pointerMap.set(options.domElement, defaultData);\r\n        if (!globalPointerActive) {\r\n        document.body.addEventListener(\r\n            \"pointermove\",\r\n            onPointerMove as EventListener\r\n        );\r\n        document.body.addEventListener(\r\n            \"pointerleave\",\r\n            onPointerLeave as EventListener\r\n        );\r\n        document.body.addEventListener(\"click\", onPointerClick as EventListener);\r\n        globalPointerActive = true;\r\n        }\r\n    }\r\n    defaultData.dispose = () => {\r\n        pointerMap.delete(options.domElement);\r\n        if (pointerMap.size === 0) {\r\n        document.body.removeEventListener(\r\n            \"pointermove\",\r\n            onPointerMove as EventListener\r\n        );\r\n        document.body.removeEventListener(\r\n            \"pointerleave\",\r\n            onPointerLeave as EventListener\r\n        );\r\n        document.body.removeEventListener(\r\n            \"click\",\r\n            onPointerClick as EventListener\r\n        );\r\n        globalPointerActive = false;\r\n        }\r\n    };\r\n    return defaultData;\r\n    }\r\n\r\n    function onPointerMove(e: PointerEvent) {\r\n    pointerPosition.set(e.clientX, e.clientY);\r\n    for (const [elem, data] of pointerMap) {\r\n        const rect = elem.getBoundingClientRect();\r\n        if (isInside(rect)) {\r\n        updatePointerData(data, rect);\r\n        if (!data.hover) {\r\n            data.hover = true;\r\n            data.onEnter(data);\r\n        }\r\n        data.onMove(data);\r\n        } else if (data.hover) {\r\n        data.hover = false;\r\n        data.onLeave(data);\r\n        }\r\n    }\r\n    }\r\n\r\n    function onPointerClick(e: PointerEvent) {\r\n    pointerPosition.set(e.clientX, e.clientY);\r\n    for (const [elem, data] of pointerMap) {\r\n        const rect = elem.getBoundingClientRect();\r\n        updatePointerData(data, rect);\r\n        if (isInside(rect)) data.onClick(data);\r\n    }\r\n    }\r\n\r\n    function onPointerLeave() {\r\n    for (const data of pointerMap.values()) {\r\n        if (data.hover) {\r\n        data.hover = false;\r\n        data.onLeave(data);\r\n        }\r\n    }\r\n    }\r\n\r\n    function updatePointerData(data: PointerData, rect: DOMRect) {\r\n    data.position.set(\r\n        pointerPosition.x - rect.left,\r\n        pointerPosition.y - rect.top\r\n    );\r\n    data.nPosition.set(\r\n        (data.position.x / rect.width) * 2 - 1,\r\n        (-data.position.y / rect.height) * 2 + 1\r\n    );\r\n    }\r\n\r\n    function isInside(rect: DOMRect) {\r\n    return (\r\n        pointerPosition.x >= rect.left &&\r\n        pointerPosition.x <= rect.left + rect.width &&\r\n        pointerPosition.y >= rect.top &&\r\n        pointerPosition.y <= rect.top + rect.height\r\n    );\r\n    }\r\n\r\n    class Z extends InstancedMesh {\r\n    config: typeof XConfig;\r\n    physics: W;\r\n    ambientLight: AmbientLight | undefined;\r\n    light: PointLight | undefined;\r\n\r\n    constructor(renderer: WebGLRenderer, params: Partial<typeof XConfig> = {}) {\r\n        const config = { ...XConfig, ...params };\r\n        const roomEnv = new RoomEnvironment();\r\n        const pmrem = new PMREMGenerator(renderer);\r\n        const envTexture = pmrem.fromScene(roomEnv).texture;\r\n        const geometry = new SphereGeometry();\r\n        const material = new Y({ envMap: envTexture, ...config.materialParams });\r\n        material.envMapRotation.x = -Math.PI / 2;\r\n        super(geometry, material, config.count);\r\n        this.config = config;\r\n        this.physics = new W(config);\r\n        this.#setupLights();\r\n        this.setColors(config.colors);\r\n    }\r\n\r\n    #setupLights() {\r\n        this.ambientLight = new AmbientLight(\r\n        this.config.ambientColor,\r\n        this.config.ambientIntensity\r\n        );\r\n        this.add(this.ambientLight);\r\n        this.light = new PointLight(\r\n        this.config.colors[0],\r\n        this.config.lightIntensity\r\n        );\r\n        this.add(this.light);\r\n    }\r\n\r\n    setColors(colors: number[]) {\r\n        if (Array.isArray(colors) && colors.length > 1) {\r\n        const colorUtils = (function (colorsArr: number[]) {\r\n            let baseColors: number[] = colorsArr;\r\n            let colorObjects: Color[] = [];\r\n            baseColors.forEach((col) => {\r\n            colorObjects.push(new Color(col));\r\n            });\r\n            return {\r\n            setColors: (cols: number[]) => {\r\n                baseColors = cols;\r\n                colorObjects = [];\r\n                baseColors.forEach((col) => {\r\n                colorObjects.push(new Color(col));\r\n                });\r\n            },\r\n            getColorAt: (ratio: number, out: Color = new Color()) => {\r\n                const clamped = Math.max(0, Math.min(1, ratio));\r\n                const scaled = clamped * (baseColors.length - 1);\r\n                const idx = Math.floor(scaled);\r\n                const start = colorObjects[idx];\r\n                if (idx >= baseColors.length - 1) return start.clone();\r\n                const alpha = scaled - idx;\r\n                const end = colorObjects[idx + 1];\r\n                out.r = start.r + alpha * (end.r - start.r);\r\n                out.g = start.g + alpha * (end.g - start.g);\r\n                out.b = start.b + alpha * (end.b - start.b);\r\n                return out;\r\n            },\r\n            };\r\n        })(colors);\r\n        for (let idx = 0; idx < this.count; idx++) {\r\n            this.setColorAt(idx, colorUtils.getColorAt(idx / this.count));\r\n            if (idx === 0) {\r\n            this.light!.color.copy(colorUtils.getColorAt(idx / this.count));\r\n            }\r\n        }\r\n\r\n        if (!this.instanceColor) return;\r\n        this.instanceColor.needsUpdate = true;\r\n        }\r\n    }\r\n\r\n    update(deltaInfo: { delta: number }) {\r\n        this.physics.update(deltaInfo);\r\n        for (let idx = 0; idx < this.count; idx++) {\r\n        U.position.fromArray(this.physics.positionData, 3 * idx);\r\n        if (idx === 0 && this.config.followCursor === false) {\r\n            U.scale.setScalar(0);\r\n        } else {\r\n            U.scale.setScalar(this.physics.sizeData[idx]);\r\n        }\r\n        U.updateMatrix();\r\n        this.setMatrixAt(idx, U.matrix);\r\n        if (idx === 0) this.light!.position.copy(U.position);\r\n        }\r\n        this.instanceMatrix.needsUpdate = true;\r\n    }\r\n    }\r\n\r\n    interface CreateBallpitReturn {\r\n    three: X;\r\n    spheres: Z;\r\n    setCount: (count: number) => void;\r\n    togglePause: () => void;\r\n    dispose: () => void;\r\n    }\r\n\r\n    function createBallpit(\r\n    canvas: HTMLCanvasElement,\r\n    config: any = {}\r\n    ): CreateBallpitReturn {\r\n    const threeInstance = new X({\r\n        canvas,\r\n        size: \"parent\",\r\n        rendererOptions: { antialias: true, alpha: true },\r\n    });\r\n    let spheres: Z;\r\n    threeInstance.renderer.toneMapping = ACESFilmicToneMapping;\r\n    threeInstance.camera.position.set(0, 0, 20);\r\n    threeInstance.camera.lookAt(0, 0, 0);\r\n    threeInstance.cameraMaxAspect = 1.5;\r\n    threeInstance.resize();\r\n    initialize(config);\r\n    const raycaster = new Raycaster();\r\n    const plane = new Plane(new Vector3(0, 0, 1), 0);\r\n    const intersectionPoint = new Vector3();\r\n    let isPaused = false;\r\n    const pointerData = createPointerData({\r\n        domElement: canvas,\r\n        onMove() {\r\n        raycaster.setFromCamera(pointerData.nPosition, threeInstance.camera);\r\n        threeInstance.camera.getWorldDirection(plane.normal);\r\n        raycaster.ray.intersectPlane(plane, intersectionPoint);\r\n        spheres.physics.center.copy(intersectionPoint);\r\n        spheres.config.controlSphere0 = true;\r\n        },\r\n        onLeave() {\r\n        spheres.config.controlSphere0 = false;\r\n        },\r\n    });\r\n    function initialize(cfg: any) {\r\n        if (spheres) {\r\n        threeInstance.clear();\r\n        threeInstance.scene.remove(spheres);\r\n        }\r\n        spheres = new Z(threeInstance.renderer, cfg);\r\n        threeInstance.scene.add(spheres);\r\n    }\r\n    threeInstance.onBeforeRender = (deltaInfo) => {\r\n        if (!isPaused) spheres.update(deltaInfo);\r\n    };\r\n    threeInstance.onAfterResize = (size) => {\r\n        spheres.config.maxX = size.wWidth / 2;\r\n        spheres.config.maxY = size.wHeight / 2;\r\n    };\r\n    return {\r\n        three: threeInstance,\r\n        get spheres() {\r\n        return spheres;\r\n        },\r\n        setCount(count: number) {\r\n        initialize({ ...spheres.config, count });\r\n        },\r\n        togglePause() {\r\n        isPaused = !isPaused;\r\n        },\r\n        dispose() {\r\n        pointerData.dispose?.();\r\n        threeInstance.dispose();\r\n        },\r\n    };\r\n    }\r\n\r\n    interface BallpitProps {\r\n    className?: string;\r\n    followCursor?: boolean;\r\n    [key: string]: any;\r\n    }\r\n\r\n    const Ballpit: React.FC<BallpitProps> = ({\r\n    className = \"\",\r\n    followCursor = true,\r\n    ...props\r\n    }) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const spheresInstanceRef = useRef<CreateBallpitReturn | null>(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        spheresInstanceRef.current = createBallpit(canvas, {\r\n        followCursor,\r\n        ...props,\r\n        });\r\n\r\n        return () => {\r\n        if (spheresInstanceRef.current) {\r\n            spheresInstanceRef.current.dispose();\r\n        }\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return <canvas className={`${className} w-full h-full`} ref={canvasRef} />;\r\n    };\r\n\r\n    export default Ballpit;\r\n    export { X, W, Y, Z, createBallpit, Ballpit, PointerData, createPointerData };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/egz/Desktop/Gaming-NextJS/app/register/RegisterForm.tsx"],"sourcesContent":["            'use client'\r\n            import React, { useState } from 'react'\r\n            import {registerUser} from '@/lib/api'\r\n            import { useAuth } from '@/hooks/useAuth'\r\n            import { useRouter } from 'next/navigation'\r\n            import Link from 'next/link'\r\n            import Ballpit from '@/app/components/Ballpit'\r\n\r\n            function RegisterForm() {\r\n                const [username , setUsername] = useState('')\r\n                const [email , setEmail] = useState('')\r\n                const [password , setPassword] = useState('')\r\n                const [loading , setLoading] = useState(false)\r\n                const [error , setError] = useState('')\r\n                const {login} = useAuth();\r\n                const router = useRouter()\r\n\r\n                const handleSubmit = async(e: React.FormEvent) => {\r\n                    e.preventDefault()\r\n                        setError('')\r\n                        setLoading(true)\r\n                    try {\r\n                        const data = await registerUser({username , email , password});\r\n                        login(data.user , data.token)\r\n                        alert(\"Account created successfully!\");\r\n                        router.push('/Games')\r\n                    } catch(error : any) {\r\n                        setError(error.message)\r\n                    } finally {\r\n                        setLoading(false)\r\n                    }\r\n                }\r\n\r\n        return (\r\n    <div className=\"min-h-screen bg-gray-900 flex\">\r\n        {/* Left side - Login Form */}\r\n        <div className=\"flex-1 flex items-center justify-center px-8\">\r\n            <div className=\"bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 w-full max-w-md border border-white/20\">\r\n            <h1 className=\"text-4xl font-bold mb-8 text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-400 text-center\">\r\n                Register Here\r\n            </h1>\r\n            \r\n            {error && (\r\n                <div className=\"mb-6 text-sm text-red-300 bg-red-500/20 backdrop-blur-sm p-3 rounded-lg border border-red-400/30\">\r\n                {error}\r\n                </div>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                <div>\r\n                <label className=\"block text-sm font-medium text-cyan-200 mb-2\">Username</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"w-full px-4 py-3 rounded-xl bg-white/10 backdrop-blur-sm text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:bg-white/20 transition-all duration-200 border border-white/20\"\r\n                    required\r\n                />\r\n                </div>\r\n                <div>\r\n                <label className=\"block text-sm font-medium text-cyan-200 mb-2\">Email Address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"w-full px-4 py-3 rounded-xl bg-white/10 backdrop-blur-sm text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:bg-white/20 transition-all duration-200 border border-white/20\"\r\n                    required\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label className=\"block text-sm font-medium text-cyan-200 mb-2\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"w-full px-4 py-3 rounded-xl bg-white/10 backdrop-blur-sm text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:bg-white/20 transition-all duration-200 border border-white/20\"\r\n                    required\r\n                />\r\n                </div>\r\n\r\n                <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-gradient-to-r from-cyan-500 to-purple-500 hover:from-cyan-600 hover:to-purple-600 text-white py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-[1.02] hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                disabled={loading}\r\n                >\r\n                {loading ? (\r\n                    <div className=\"flex items-center justify-center space-x-2\">\r\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                    <span>Signing In...</span>\r\n                    </div>\r\n                ) : (\r\n                    'Sign In'\r\n                )}\r\n                </button>\r\n            </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n        {/* Right side - Ballpit Animation without box */}\r\n        <div className=\"flex-1 flex items-center justify-center\">\r\n            <div className=\"w-full h-full relative\">\r\n            <Ballpit\r\n                count={150}\r\n                gravity={0.6}\r\n                friction={0.85}\r\n                wallBounce={0.9}\r\n                followCursor={true}\r\n                colors={[\r\n                '#FF6B6B', // Coral\r\n                '#4ECDC4', // Turquoise\r\n                '#45B7D1', // Sky Blue\r\n                '#96CEB4', // Mint Green\r\n                '#FFEAA7', // Light Yellow\r\n                '#DDA0DD', // Plum\r\n                '#98D8C8', // Mint\r\n                '#F7DC6F', // Light Gold\r\n                '#BB8FCE', // Light Purple\r\n                '#85C1E9', // Light Blue\r\n                '#F8C471', // Peach\r\n                '#82E0AA'  // Light Green\r\n                ]}\r\n            />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n            export default RegisterForm"],"names":[],"mappings":";;;;AACY;AACA;AACA;AACA;AAEA;AANA;;;;;;;AAQA,SAAS;IACL,MAAM,CAAC,UAAW,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC1C,MAAM,CAAC,OAAQ,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACpC,MAAM,CAAC,UAAW,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC1C,MAAM,CAAC,SAAU,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACxC,MAAM,CAAC,OAAQ,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACpC,MAAM,EAAC,KAAK,EAAC,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAM;QACvB,EAAE,cAAc;QACZ,SAAS;QACT,WAAW;QACf,IAAI;YACA,MAAM,OAAO,MAAM,CAAA,GAAA,0GAAA,CAAA,eAAY,AAAD,EAAE;gBAAC;gBAAW;gBAAQ;YAAQ;YAC5D,MAAM,KAAK,IAAI,EAAG,KAAK,KAAK;YAC5B,MAAM;YACN,OAAO,IAAI,CAAC;QAChB,EAAE,OAAM,OAAa;YACjB,SAAS,MAAM,OAAO;QAC1B,SAAU;YACN,WAAW;QACf;IACJ;IAER,qBACJ,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACf,8OAAC;4BAAG,WAAU;sCAAiH;;;;;;wBAI9H,uBACG,8OAAC;4BAAI,WAAU;sCACd;;;;;;sCAIL,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CACpC,8OAAC;;sDACD,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAChE,8OAAC;4CACG,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAGZ,8OAAC;;sDACD,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAChE,8OAAC;4CACG,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4CACxC,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAIZ,8OAAC;;sDACD,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAChE,8OAAC;4CACG,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAIZ,8OAAC;oCACD,MAAK;oCACL,WAAU;oCACV,UAAU;8CAET,wBACG,8OAAC;wCAAI,WAAU;;0DACf,8OAAC;gDAAI,WAAU;;;;;;0DACf,8OAAC;0DAAK;;;;;;;;;;;+CAGN;;;;;;;;;;;;;;;;;;;;;;;0BAUZ,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACf,cAAA,8OAAC,6HAAA,CAAA,UAAO;wBACJ,OAAO;wBACP,SAAS;wBACT,UAAU;wBACV,YAAY;wBACZ,cAAc;wBACd,QAAQ;4BACR;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA,UAAW,cAAc;yBACxB;;;;;;;;;;;;;;;;;;;;;;AAOb;uCAEuB","debugId":null}}]
}